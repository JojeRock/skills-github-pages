import FreeCAD
import FreeCADGui
import Part
import math

def create_rack_gear():
    try:
        doc = FreeCAD.ActiveDocument or FreeCAD.newDocument("RackGear")
        
        # پارامترهای طراحی
        length = 80.0      # طول استوانه (mm)
        diameter = 12.0    # قطر استوانه (mm)
        teeth = 25         # تعداد دنده‌ها
        
        # 1. ایجاد استوانه اصلی
        cylinder = Part.makeCylinder(diameter/2, length)
        
        # 2. ایجاد برش دهنده برای سطح صاف
        cutter = Part.makeBox(diameter*1.5, diameter*1.5, length*1.1,
                            FreeCAD.Vector(-diameter*0.75, -diameter, -length*0.05))
        
        # 3. ایجاد استوانه با یک سطح صاف
        half_cylinder = cylinder.cut(cutter)
        
        # 4. محاسبات دنده‌ها
        module = (math.pi * diameter) / teeth
        tooth_height = 2.25 * module
        tooth_space = math.pi * module
        
        # 5. ایجاد پروفیل دنده‌ها (به روشی ساده‌تر)
        profile = []
        for i in range(teeth + 1):
            x = i * tooth_space
            profile.append(FreeCAD.Vector(x, -tooth_height/2, 0))
            profile.append(FreeCAD.Vector(x, tooth_height/2, 0))
        
        # 6. ایجاد شکل دنده‌ها
        wire = Part.makePolygon(profile)
        face = Part.Face(wire)
        rack = face.extrude(FreeCAD.Vector(0, 0, length))
        
        # 7. موقعیت دهی دنده‌ها روی سطح صاف
        rack.translate(FreeCAD.Vector(-teeth*tooth_space/2, -diameter/2, 0))
        
        # 8. ترکیب نهایی
        final_gear = half_cylinder.fuse(rack)
        
        # 9. اضافه به سند
        obj = doc.addObject("Part::Feature", "RackGear")
        obj.Shape = final_gear
        
        # تنظیمات نمایش
        FreeCADGui.ActiveDocument.activeView().viewAxonometric()
        FreeCADGui.SendMsgToActiveView("ViewFit")
        FreeCADGui.ActiveDocument.activeView().setDrawStyle("Shaded")
        
        return obj
    
    except Exception as e:
        FreeCAD.Console.PrintError(f"خطا: {str(e)}\n")
        return None

create_rack_gear()

import FreeCAD
import Part
from FreeCAD import Base

def create_cut_cylinder():
    # ایجاد سند جدید
    doc = FreeCAD.ActiveDocument
    if doc is None:
        doc = FreeCAD.newDocument("CutCylinder")
    
    # پارامترهای طراحی (همه به میلیمتر)
    diameter = 16.0  # 1.6cm
    radius = diameter / 2
    length = 80.0    # 8cm
    extra_offset = 4.0  # 4mm آنورتر از نیمه
    
    # ایجاد استوانه اصلی
    cylinder = Part.makeCylinder(radius, length, Base.Vector(0,0,0), Base.Vector(0,0,1))
    
    # روش جایگزین: استفاده از یک صفحه برای برش
    # ابتدا یک مکعب بزرگ ایجاد می‌کنیم
    box = Part.makeBox(100, 100, length*2, Base.Vector(radius + extra_offset, -50, -length))
    
    # سپس آن را با استوانه ترکیب می‌کنیم
    common = cylinder.common(box)
    
    # حالا تفاضل می‌گیریم تا قسمت مورد نظر باقی بماند
    cut_cylinder = cylinder.cut(common)
    
    # بررسی نتیجه
    if cut_cylinder.isNull() or cut_cylinder.Volume == cylinder.Volume:
        FreeCAD.Console.PrintError("عملیات برش ناموفق بود!\n")
        FreeCAD.Console.PrintMessage("مشکلات احتمالی:\n")
        FreeCAD.Console.PrintMessage("1. موقعیت ابزار برش\n")
        FreeCAD.Console.PrintMessage("2. جهت برش\n")
        FreeCAD.Console.PrintMessage("3. اندازه ابزار برش\n")
        return
    
    # نمایش ابزار برش برای دیباگ
    debug_tool = doc.addObject("Part::Feature", "DebugCutTool")
    debug_tool.Shape = box
    debug_tool.ViewObject.Transparency = 80
    debug_tool.ViewObject.Visibility = False  # غیرفعال بعد از دیباگ
    
    # اضافه کردن نتیجه نهایی
    result = doc.addObject("Part::Feature", "CutCylinder")
    result.Shape = cut_cylinder
    
    # تنظیمات نمایش
    FreeCADGui.ActiveDocument.ActiveView.viewAxometric()
    FreeCADGui.SendMsgToActiveView("ViewFit")
    doc.recompute()
    
    FreeCAD.Console.PrintMessage("عملیات با موفقیت انجام شد!\n")
    FreeCAD.Console.PrintMessage(f"برش از {radius + extra_offset}mm از مرکز انجام شد\n")

create_cut_cylinder()
